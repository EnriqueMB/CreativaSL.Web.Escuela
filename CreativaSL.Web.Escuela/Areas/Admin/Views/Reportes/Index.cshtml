@model CreativaSL.Web.Escuela.Models.ReportesModels
@{
    ViewBag.Title = "Index";
}

@section featured
{
    @{
        var message = TempData["message"] ?? string.Empty;
        var typemessage = TempData["typemessage"] ?? string.Empty;
    }
    <div class="page-content">
        <div id="Error" class="error message" style="display: none">
            <h3></h3>
        </div>
        <div id="Success" class="success message" style="display: none">
            <h3></h3>
        </div>
        <div class="container-fluid">
            <div class="row-fluid">
                <div class="span12">
                    <h3 class="page-title">Ofelia Narvaez Rincón<small> Administración</small></h3>
                </div>
            </div>
            <div id="dashboard">
                <div class="row-fluid">
                    <div class="span12">
                        <div class="portlet box blue">
                            <div class="portlet-title">
                                <div class="caption"><i class="icon-edit"></i>Notificaciones</div>
                            </div>
                            <div class="portlet-body">

                                <div class="dataTables_wrapper form-inline" style="min-height:100px;">
                                    <div id="miGrid">
                                        <div id="datdim" class="dataTables_wrapper form-inline" style="border-bottom-style: solid; border-bottom-color: #abd1eb; border-bottom-width: thin;">
                                            <div class="row-fluid" style="margin:0px; padding:0px">
                                                <div class="portlet-body flip-scroll">
                                                    <section id="flip-scroll">

                                                        <h3 class="form-section">Reportes</h3>
                                                        @using (Html.BeginForm("", "", FormMethod.Post, new { @class = "form-horizontal", @id = "Form-notificacion", @onsubmit = "return llenarTabla();" }))
                                                        {
                                                            @Html.AntiForgeryToken()
                                                            @Html.ValidationSummary(true)

                                                            <div class="portlet-body form">

                                                                <div class="row-fluid">
                                                                    <div class="span4">
                                                                        <div class="control-group">
                                                                            <label class="control-label">Plan de estudio<span class="required"> *</span></label>
                                                                            <div class="controls">
                                                                                @Html.DropDownListFor(model => model.listaPlanEstudio, ViewData["cmbPlanEstudio"] as SelectList, new { id = "ListPlanEstudioOrigen", @class = "span12 m-wrap" })
                                                                                @Html.ValidationMessageFor(model => model.listaPlanEstudio)
                                                                                <span class="help-bolck">Ingrese el Plan de estudio</span>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    <div class="span4">
                                                                        <div class="control-group">
                                                                            <label class="control-label">Modalidad<span class="required"> *</span></label>
                                                                            <div class="controls">
                                                                                @Html.DropDownListFor(model => model.listaModalidad, ViewData["cmbModalidad"] as SelectList, new { id = "ListModalidadOrigen", @class = "span12 m-wrap" })
                                                                                @Html.ValidationMessageFor(model => model.listaModalidad)
                                                                                <span class="help-bolck">Ingrese la modalidad</span>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    <div class="span4">
                                                                        <div class="control-group">
                                                                            <label class="control-label">Especialidad<span class="required"> *</span></label>
                                                                            <div class="controls">
                                                                                @Html.DropDownListFor(model => model.listaEspecialidad, ViewData["cmbEspecialidad"] as SelectList, new { id = "ListEspecialidadOrigen", @class = "span12 m-wrap" })
                                                                                @Html.ValidationMessageFor(model => model.listaEspecialidad)
                                                                                <span class="help-bolck">Ingrese la especialidad</span>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>

                                                                <div class="row-fluid">

                                                                    <div class="span4">
                                                                        <div class="control-group">
                                                                            <label class="control-label">Ciclo Escolar<span class="required"> *</span></label>
                                                                            <div class="controls">
                                                                                @Html.DropDownListFor(model => model.listaCicloEscolar, ViewData["cmbCicloEscolar"] as SelectList, new { id = "ListCicloOrigen", @class = "span12 m-wrap" })
                                                                                @Html.ValidationMessageFor(model => model.listaCicloEscolar)
                                                                            </div>
                                                                        </div>
                                                                        <span class="help-block">Ingrese ciclo escolar</span>
                                                                    </div>
                                                                    <div class="span4">
                                                                        <div class="control-group">
                                                                            <label class="control-label">Curso<span class="required"> *</span></label>
                                                                            <div class="controls">
                                                                                @Html.DropDownListFor(model => model.listaCursos, ViewData["cmbCursos"] as SelectList, new { id = "ListCursosOrigen", @class = "span12 m-wrap" })
                                                                                @Html.ValidationMessageFor(model => model.listaCursos)
                                                                            </div>
                                                                        </div>
                                                                        <span class="help-block">Ingrese Curso</span>
                                                                    </div>
                                                                <div class="span4">
                                                                        <div class="control-group">
                                                                            <label class="control-label">Grupo<span class="required"> *</span></label>
                                                                            <div class="controls">
                                                                                @Html.DropDownListFor(model => model.listaGrupos, ViewData["cmbGrupos"] as SelectList, new { id = "ListGrupoOrigen", @class = "span12 m-wrap" })
                                                                                @Html.ValidationMessageFor(model => model.listaGrupos)
                                                                            </div>
                                                                        </div>
                                                                        <span class="help-block">Ingrese Grupo</span>
                                                                    </div>
                                                                   

                                                                </div>                                                                                                                                <div class="row-fluid">
                                                                <div class="row-fluid">
                                                                    <div class="span4">
                                                                        <div class="control-group">
                                                                            <label class="control-label">Fecha de inicio<span class="required"> *</span></label>
                                                                            <div class="controls">
                                                                                <div id="datetimepicker3" class="input-append date calendar">
                                                                                    @Html.TextBoxFor(model => model.fecha, "{0:dd/MM/yyyy}", new { id = "fecha", @class = "span12 m-wrap", @readonly = "readonly" })
                                                                                    @Html.ValidationMessageFor(model => model.fecha)
                                                                                    <span class="add-on"><i data-time-icon="icon-time" data-date-icon="icon-calendar"></i></span>
                                                                                </div>
                                                                                <span class="help-block">Ingrese la fecha de inicio del ciclo escolar</span>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    <div class="span8">
                                                                        <div class="control-group">

                                                                            <div class="controls text-center">
                                                                                <input type="submit" value="VER " class="btn green" style="margin-top: 35px;">
                                                                            </div>
                                                                        </div>

                                                                    </div>
                                                                </div>
                                                               
                                                             


                                                            </div>


                                                               


                                                            </div>
                                                        }

                                                    </section>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        jQuery.validator.methods["date"] = function (value, element) { return true; }

        function llenarTabla() {

            var grupo = $('#ListGrupoOrigen').val();
            var profesor = $("#ListProfesor").val();
            var modalidad=$('#ListModalidadOrigen').val();
            var planestudio = $('#ListPlanEstudioOrigen').val();
            var fecha = $('#fecha').val();
            var curso = $("#ListCursosOrigen").val();
            var ciclo = $("#ListCicloOrigen").val();
            var especialidad = $("#ListEspecialidadOrigen").val();

            if (planestudio != 0) {
                if (modalidad == '' || profesor == '' || grupo == '' || curso == '' || ciclo == '' || especialidad =='') {

                }
                else {

                    location.href = "/Admin/Reportes/Detalle/" + curso + '?id2='+grupo+'&id3='+fecha;
                }
            }
            else {
                alert("Seleccione un plan de estudio");
            }
            
            return false;
        }
        $("#ListPlanEstudioOrigen").change(function () {
            var combo = $('#ListModalidadOrigen').attr('id');
            getComboModalidad($("#ListPlanEstudioOrigen").val(), combo);


        });
        $("#ListModalidadOrigen").change(function () {
            var combo = $('#ListEspecialidadOrigen').attr('id');
            getComboEspecialidad($("#ListModalidadOrigen").val(), combo);
        });
        $("#ListEspecialidadOrigen").change(function () {
            var combo = $('#ListCursosOrigen').attr('id');
            getComboCursos($("#ListEspecialidadOrigen").val(), combo);
        });
        $("#ListCursosOrigen").change(function () {
            var combo = $('#ListGrupoOrigen').attr('id');
            getComboGrupo($("#ListCicloOrigen").val(), $("#ListEspecialidadOrigen").val(), $("#ListCursosOrigen").val(), combo);
        });
        $('#ListGrupoOrigen').change(function () {

            getComboProfesor($(this).val());
        });
        function getComboProfesor(idgrupo) {

            $.ajax({
                url: "/Admin/NotificacionProfesor/ComboProfesor",
                data: {
                    grupo: idgrupo
                },
                dataType: "json",
                type: "POST",
                error: function (xhr, ajaxOptions, thrownError, request) {
                    $("#" + combo).html('');

                    alert(xhr.status);
                    alert(thrownError);
                },
                success: function (cmbProfesor) {
                    var items = "";

                    for (var i = 0; i < cmbProfesor.length; i++) {
                        items += "<option value=\"" + cmbProfesor[i].id_persona + "\">" + cmbProfesor[i].nombre + "</option>";

                    }
                    $("#ListProfesor").html(items);


                }
            });
        }
        function getComboGrupo(ciclo, especialidad, curso, combo) {

            $.ajax({
                url: "/Admin/NotificacionProfesor/ComboGrupo",
                data: {
                    ciclo: ciclo,
                    IDEspecialidad: especialidad,
                    curso: curso


                },
                dataType: "json",
                type: "POST",
                error: function (xhr, ajaxOptions, thrownError, request) {
                    $("#" + combo).html('');

                    alert(xhr.status);
                    alert(thrownError);
                },
                success: function (cmbGrupo) {
                    var items = "";

                    for (var i = 0; i < cmbGrupo.length; i++) {
                        items += "<option value=\"" + cmbGrupo[i].IDGrupo + "\">" + cmbGrupo[i].Nombre + "</option>";

                    }
                    $("#" + combo).html(items);


                }
            });
        }
        function getComboCursos(IDE, combo) {
            $.ajax({
                url: "/Admin/NotificacionProfesor/ComboCursos",
                data: {
                    IDEspecialidad: IDE

                },
                dataType: "json",
                type: "POST",
                error: function (xhr, ajaxOptions, thrownError, request) {
                    $("#" + combo).html('');

                    alert(xhr.status);
                    alert(thrownError);
                },
                success: function (cmbCursos) {
                    var items = "";
                    for (var i = 0; i < cmbCursos.length; i++) {
                        items += "<option value=\"" + cmbCursos[i].IDCurso + "\">" + cmbCursos[i].Descripcion + "</option>";
                    }
                    $("#" + combo).html(items);

                }
            });
        }
        function getComboEspecialidad(IDM, combo) {
            $.ajax({
                url: "/Admin/NotificacionProfesor/ComboEspecialidad",
                data: {
                    IDModalidad: IDM

                },
                dataType: "json",
                type: "POST",
                error: function (xhr, ajaxOptions, thrownError, request) {
                    $("#" + combo).html('');

                    alert(xhr.status);
                    alert(thrownError);
                },
                success: function (cmbEspecialidad) {
                    var items = "";
                    for (var i = 0; i < cmbEspecialidad.length; i++) {
                        items += "<option value=\"" + cmbEspecialidad[i].id_especialidad + "\">" + cmbEspecialidad[i].descripcion + "</option>";
                    }
                    $("#" + combo).html(items);

                }
            });
        }
        function getComboModalidad(IDP, combo) {

            $.ajax({
                url: "/Admin/NotificacionProfesor/ComboModalidad",
                data: {
                    idplanEstudio: IDP

                },
                dataType: "json",
                type: "POST",
                error: function (xhr, ajaxOptions, thrownError, request) {
                    $("#" + combo).html('');

                    alert(xhr.status);
                    alert(thrownError);
                },
                success: function (cmbModalidad) {
                    var items = "";
                    for (var i = 0; i < cmbModalidad.length; i++) {
                        items += "<option value=\"" + cmbModalidad[i].IDModalidad + "\">" + cmbModalidad[i].Descripcion + "</option>";
                    }
                    $("#" + combo).html(items);

                }
            });
        }
        cursor_wait = function () {
            // switch to cursor wait for the current element over
            var elements = $(':hover');
            if (elements.length) {
                // get the last element which is the one on top
                elements.last().addClass('cursor-wait');
            }
            // use .off() and a unique event name to avoid duplicates
            $('html').
            off('mouseover.cursorwait').
            on('mouseover.cursorwait', function (e) {
                // switch to cursor wait for all elements you'll be over
                $(e.target).addClass('cursor-wait');
            });
        }

        remove_cursor_wait = function () {
            $('html').off('mouseover.cursorwait'); // remove event handler
            $('.cursor-wait').removeClass('cursor-wait'); // get back to default
        }
        $('a.enviar').live('click', function (e) {
            e.preventDefault();
            if (confirm("¿Desea enviar las notificaciones?") == false) return;
            cursor_wait();
            var url = $(this).attr('href');

            $.ajax({
                url: url,
                type: 'POST',
                dataType: 'json',
                success: function (result) {
                    remove_cursor_wait();
                    $('#Success').html('<h3>Las notificaciones fueron enviadas correctamente<h3>');
                    $('#Success').css("display", "block");
                    $('#Success').delay(400).slideDown(400).delay(2000).slideUp(400);
                    $('#Success').css("display", "block");

                },
                error: function (xhr, ajaxOptions, thrownError, request) {
                    alert(xhr.status);
                    alert(thrownError);
                    remove_cursor_wait();
                    $('#Error').html('<h3>Ocurrio un error al enviar las notificaciones<h3>');
                    $('#Error').css("display", "block");
                    $('#Error').delay(400).slideDown(400).delay(2000).slideUp(400);
                    $('#Error').css("display", "block");

                }
            });
        });
        $(document).ready(function () {



                $('#example').DataTable({
                    "bSort": false,
                    "bAutoWidth": false,
                    "aLengthMenu": [
                    [10, 25, 50, 100, 200, -1], [10, 25, 50, 100, 200, "All"]
                    ],
                    "iDisplayLength": 10
                });
                $('#example2').DataTable({
                    "bSort": false,
                    "bAutoWidth": false,
                    "aLengthMenu": [
                    [10, 25, 50, 100, 200, -1], [10, 25, 50, 100, 200, "All"]
                    ],
                    "iDisplayLength": 10
                });
                $('#example3').DataTable({
                    "bSort": false,
                    "bAutoWidth": false,
                    "aLengthMenu": [
                    [10, 25, 50, 100, 200, -1], [10, 25, 50, 100, 200, "All"]
                    ],
                    "iDisplayLength": 10
                });
                $('#example1').DataTable({
                    "bSort": false,
                    "bAutoWidth": false,
                    "aLengthMenu": [
                    [10, 25, 50, 100, 200, -1], [10, 25, 50, 100, 200, "All"]
                    ],
                    "iDisplayLength": 10
                });


            $('a.delete').live('click', function (e) {
                e.preventDefault();
                if (confirm("¿Confirmar eliminación?") == false) return;
                var url = $(this).attr('href');
                $.ajax({
                    url: url,
                    type: 'POST',
                    dataType: 'json',
                    success: function (result) { location.reload(true); },
                    error: function () {
                        $('#Error').html('<h3>Ocurrio un error al eliminar este registro<h3>');
                        $('#Error').css("display", "block");
                        $('#Error').delay(400).slideDown(400).delay(2000).slideUp(400);
                        $('#Error').css("display", "block");
                    }
                });
            });

        });

       jQuery(document).ready(function () {
           var message = '@message';
            var typemessage = '@typemessage';

            if (typemessage && message) {
                if (typemessage == '1') {
                    $('#Success').html('<h3>' + message + '<h3>');
                    $('#Success').css("display", "block");
                    $('#Success').delay(400).slideDown(400).delay(2000).slideUp(400);
                    $('#Success').css("display", "block");
                }
                else if (typemessage == '2') {
                    $('#Error').html('<h3>' + message + '<h3>');
                    $('#Error').css("display", "block");
                    $('#Error').delay(400).slideDown(400).delay(2000).slideUp(400);
                    $('#Error').css("display", "block");
                }
            }
        });

    </script>
}

